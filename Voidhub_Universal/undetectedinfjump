local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local LocalPlayer = Players.LocalPlayer

local infJumpEnabled = false
local Character
local Humanoid

local function spawnBrickUnder()
    if not Character then return end
    local hrp = Character:FindFirstChild("HumanoidRootPart")
    if not hrp then return end

    local brick = Instance.new("Part")
    brick.Name = "helloguy"
    brick.Size = Vector3.new(2, 2, 2) -- stud-sized
    brick.Transparency = 1 -- fully transparent
    brick.Anchored = true
    brick.CanCollide = true
    brick.CFrame = hrp.CFrame * CFrame.new(0, -1, 0) -- inside legs, 1 stud below center
    brick.Parent = workspace

    delay(0.1, function()
        if brick and brick.Parent then
            brick:Destroy()
        end
    end)
end

local function onCharacterAdded(char)
    Character = char
    Humanoid = char:WaitForChild("Humanoid")
end

if LocalPlayer.Character then
    onCharacterAdded(LocalPlayer.Character)
end
LocalPlayer.CharacterAdded:Connect(onCharacterAdded)

UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed or not infJumpEnabled then return end

    if (input.UserInputType == Enum.UserInputType.Keyboard and input.KeyCode == Enum.KeyCode.Space)
    or input.UserInputType == Enum.UserInputType.Touch then
        spawnBrickUnder()
    end
end)

local Toggle = TOHtab:CreateToggle({
    Name = "Inf Jump Undetected",
    CurrentValue = false,
    Flag = "SpawnBrickToggleFlag",
    Callback = function(value)
        infJumpEnabled = value
    end,
})
